\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { CheckCircle, ChevronRight, ChevronLeft, X, Users, ListChecks, Trophy, User } from 'lucide-react';\nimport { useAuth } from '@/hooks/use-auth';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface OnboardingStep {\n  title: string;\n  description: string;\n  content: React.ReactNode;\n  icon?: React.ReactNode;\n}\n\n// Konstante für den localStorage-Schlüssel\nconst ONBOARDING_COMPLETED_KEY_PREFIX = 'rwk-onboarding-completed-';\n\nexport function OnboardingWizard() {\n  const { user, userPermissions } = useAuth();\n  const { toast } = useToast();\n  const [open, setOpen] = useState(false);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [hasSeenOnboarding, setHasSeenOnboarding] = useState(false);\n  const [storageError, setStorageError] = useState(false);\n\n  // Überprüfen, ob der Benutzer das Onboarding bereits gesehen hat\n  useEffect(() => {\n    if (!user?.uid) return;\n    \n    try {\n      const onboardingCompleted = localStorage.getItem(`${ONBOARDING_COMPLETED_KEY_PREFIX}${user.uid}`);\n      setHasSeenOnboarding(!!onboardingCompleted);\n      \n      // Automatisch öffnen, wenn der Benutzer neu ist und das Onboarding noch nicht gesehen hat\n      if (!onboardingCompleted) {\n        setOpen(true);\n      }\n    } catch (error) {\n      console.error('Fehler beim Zugriff auf localStorage:', error);\n      setStorageError(true);\n      // Fallback: Dialog nicht automatisch öffnen\n    }\n  }, [user]);\n\n  const role = userPermissions?.role || '';\n  const isVereinsvertreter = role === 'vereinsvertreter';\n  const isMannschaftsfuehrer = role === 'mannschaftsfuehrer';\n\n  // Gemeinsame Schritte für beide Rollen\n  const commonSteps: OnboardingStep[] = [\n    {\n      title: \"Willkommen bei der RWK Einbeck App\",\n      description: \"Wir helfen Ihnen, sich mit den wichtigsten Funktionen vertraut zu machen.\",\n      icon: <Trophy className=\"h-8 w-8 text-primary\" />,\n      content: (\n        <div className=\"space-y-4\">\n          <p>Die RWK Einbeck App unterstützt Sie bei der Verwaltung und Verfolgung von Rundenwettkämpfen des Kreisschützenverbandes Einbeck.</p>\n          <p>In den nächsten Schritten zeigen wir Ihnen die wichtigsten Funktionen für Ihre Rolle.</p>\n        </div>\n      )\n    },\n    {\n      title: \"Ergebniserfassung\",\n      description: \"So erfassen Sie Wettkampfergebnisse\",\n      icon: <ListChecks className=\"h-8 w-8 text-primary\" />,\n      content: (\n        <div className=\"space-y-4\">\n          <p>Unter dem Menüpunkt \"Ergebnisse\" können Sie Wettkampfergebnisse für Ihre Mannschaften erfassen:</p>\n          <ol className=\"list-decimal list-inside space-y-2\">\n            <li>Wählen Sie die Saison, Liga und den Durchgang aus</li>\n            <li>Wählen Sie die Mannschaft und den Schützen</li>\n            <li>Geben Sie das Ringergebnis ein</li>\n            <li>Fügen Sie das Ergebnis zur Liste hinzu</li>\n            <li>Speichern Sie alle Ergebnisse, wenn Sie fertig sind</li>\n          </ol>\n        </div>\n      )\n    },\n    {\n      title: \"Passwort ändern\",\n      description: \"Sicherheit Ihres Kontos\",\n      icon: <User className=\"h-8 w-8 text-primary\" />,\n      content: (\n        <div className=\"space-y-4\">\n          <p>Aus Sicherheitsgründen empfehlen wir Ihnen, Ihr Passwort zu ändern:</p>\n          <ol className=\"list-decimal list-inside space-y-2\">\n            <li>Klicken Sie auf Ihren Namen oben rechts</li>\n            <li>Wählen Sie \"Passwort ändern\"</li>\n            <li>Geben Sie Ihr aktuelles und neues Passwort ein</li>\n          </ol>\n          <p className=\"text-sm text-muted-foreground\">Ein sicheres Passwort sollte mindestens 8 Zeichen lang sein und Zahlen sowie Sonderzeichen enthalten.</p>\n        </div>\n      )\n    }\n  ];\n\n  // Spezifische Schritte für Vereinsvertreter\n  const vereinsvertreterSteps: OnboardingStep[] = [\n    {\n      title: \"Mannschaftsverwaltung\",\n      description: \"So verwalten Sie Ihre Mannschaften\",\n      icon: <Users className=\"h-8 w-8 text-primary\" />,\n      content: (\n        <div className=\"space-y-4\">\n          <p>Als Vereinsvertreter können Sie Mannschaften für Ihren Verein verwalten:</p>\n          <ol className=\"list-decimal list-inside space-y-2\">\n            <li>Unter \"Meine Mannschaften\" können Sie neue Mannschaften anlegen</li>\n            <li>Wählen Sie die Saison und geben Sie einen Namen ein</li>\n            <li>Weisen Sie Schützen zu (maximal 3 pro Mannschaft)</li>\n            <li>Die Zuweisung zu einer Liga erfolgt durch den Administrator</li>\n          </ol>\n        </div>\n      )\n    },\n    {\n      title: \"Schützenverwaltung\",\n      description: \"So verwalten Sie Ihre Schützen\",\n      icon: <User className=\"h-8 w-8 text-primary\" />,\n      content: (\n        <div className=\"space-y-4\">\n          <p>Als Vereinsvertreter können Sie Schützen für Ihren Verein verwalten:</p>\n          <ol className=\"list-decimal list-inside space-y-2\">\n            <li>Unter \"Meine Schützen\" sehen Sie alle Schützen Ihres Vereins</li>\n            <li>Sie können neue Schützen anlegen (Name, Vorname, Geschlecht)</li>\n            <li>Bestehende Schützen können bearbeitet oder gelöscht werden</li>\n            <li>Die Zuordnung zu Mannschaften erfolgt in der Mannschaftsverwaltung</li>\n          </ol>\n        </div>\n      )\n    }\n  ];\n\n  // Zusammenstellen der Schritte basierend auf der Rolle\n  const steps = isVereinsvertreter \n    ? [...commonSteps, ...vereinsvertreterSteps] \n    : commonSteps;\n\n  const handleComplete = () => {\n    if (user?.uid) {\n      try {\n        localStorage.setItem(`${ONBOARDING_COMPLETED_KEY_PREFIX}${user.uid}`, 'true');\n        setHasSeenOnboarding(true);\n      } catch (error) {\n        console.error('Fehler beim Speichern in localStorage:', error);\n        setStorageError(true);\n        // Trotzdem fortfahren, da der Benutzer die Einführung gesehen hat\n      }\n    }\n    \n    setOpen(false);\n    toast({\n      title: \"Einführung abgeschlossen\",\n      description: \"Sie können die Einführung jederzeit über das Hilfemenü erneut aufrufen.\",\n    });\n  };\n\n  const handleNext = () => {\n    if (currentStep < steps.length - 1) {\n      setCurrentStep(currentStep + 1);\n    } else {\n      handleComplete();\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentStep > 0) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  // Wenn localStorage nicht verfügbar ist, zeigen wir eine Warnung an\n  if (storageError) {\n    toast({\n      title: \"Hinweis\",\n      description: \"Ihr Browser unterstützt keine lokale Speicherung. Die Einführung wird bei jedem Besuch angezeigt.\",\n      variant: \"warning\",\n    });\n  }\n\n  return (\n    <>\n      <Button \n        variant=\"outline\" \n        onClick={() => setOpen(true)}\n        className=\"w-full\"\n      >\n        Einführung starten\n      </Button>\n\n      <Dialog open={open} onOpenChange={(newOpen) => {\n        // Verhindern, dass der Dialog geschlossen wird, wenn auf den Hintergrund geklickt wird\n        // Nur über die Buttons schließen lassen\n        if (!newOpen) return;\n        setOpen(newOpen);\n      }}>\n        <DialogContent className=\"sm:max-w-md\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2\">\n              {steps[currentStep]?.icon || <Trophy className=\"h-8 w-8 text-primary\" />}\n              {steps[currentStep]?.title || \"Willkommen\"}\n            </DialogTitle>\n          </DialogHeader>\n          \n          <div className=\"py-4\">\n            <p className=\"text-sm text-muted-foreground mb-4\">{steps[currentStep]?.description || \"\"}</p>\n            {steps[currentStep]?.content || (\n              <p>Keine Inhalte verfügbar. Bitte versuchen Sie es später erneut.</p>\n            )}\n          </div>\n          \n          <div className=\"flex justify-between mt-4\">\n            <div>\n              {currentStep > 0 && (\n                <Button variant=\"outline\" onClick={handlePrevious}>\n                  <ChevronLeft className=\"mr-2 h-4 w-4\" />\n                  Zurück\n                </Button>\n              )}\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm text-muted-foreground\">\n                {currentStep + 1} von {steps.length}\n              </span>\n              <Button onClick={handleNext}>\n                {currentStep < steps.length - 1 ? (\n                  <>\n                    Weiter\n                    <ChevronRight className=\"ml-2 h-4 w-4\" />\n                  </>\n                ) : (\n                  <>\n                    Fertig\n                    <CheckCircle className=\"ml-2 h-4 w-4\" />\n                  </>\n                )}\n              </Button>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}